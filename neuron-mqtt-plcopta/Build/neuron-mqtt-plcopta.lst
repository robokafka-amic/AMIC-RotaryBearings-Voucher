***********************************************************************
*
*	CODE GENERATION LISTING FOR: neuron-mqtt-plcopta
*	COMPILER VERSION: 5.22.0.39
*
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
3001E4D0  FB90 F3F1		sdiv r3, r0, r1
3001E4D4  4359     		mul r1, r1, r3
3001E4D6  EBC1 0000		rsb r0, r1, r0
3001E4DA  4770     		bx lr

$$MOD_U:
3001E4DC  FBB0 F3F1		udiv r3, r0, r1
3001E4E0  4359     		mul r1, r1, r3
3001E4E2  EBC1 0000		rsb r0, r1, r0
3001E4E6  4770     		bx lr

**************************************************
	List program: optaMqttNeuron
**************************************************

PROGRAM optaMqttNeuron

        VAR
data_real : REAL;
	END_VAR

END_PROGRAM

3001E4F0  B082     		sub sp, sp, #8
3001E4F2  F8CD E000		str lr, [sp]
3001E4F6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0			{SRC:optaMqttNeuron}
#1		 
#2		  
#3			(* Network 1 *)
#4			LD		MQTTCONNECTION {R:1$2}
(*) UNDEF
3001E4FA  F8DF 7030		ldr r7, [pc, #+48] ; 0x38000001
3001E4FE  7838     		ldrb r0, [r7]

#5			ST		LEDBLUE {R:1$4}
(*) BOOL
3001E500  F8DF 7020		ldr r7, [pc, #+32] ; 0x2401F406
3001E504  7038     		strb r0, [r7]

#6		 
#7			(* Network 2 *)
#8			LD		WIFICONNECTION {R:2$4}
(*) UNDEF
3001E506  F8DF 7020		ldr r7, [pc, #+32] ; 0x38000000
3001E50A  7838     		ldrb r0, [r7]

#9			ST		LEDGREEN {R:2$6}
(*) BOOL
3001E50C  F8DF 7010		ldr r7, [pc, #+16] ; 0x2401F405
3001E510  7038     		strb r0, [r7]

#10		 
#11			(* Network 3 *)
#12			LD		TRUE
(-) UNDEF
3001E512  2001     		mov r0, #1 ; 1

3001E514  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E518  F8DD E000		ldr lr, [sp]
3001E51C  B002     		add sp, sp, #8

3001E51E  4770     		bx lr

3001E520  FFFFFFFF		; 0x2401F405
3001E524  FFFFFFFF		; 0x2401F406
3001E528  FFFFFFFF		; 0x38000000
3001E52C  FFFFFFFF		; 0x38000001

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
3001E530  4770     		bx lr


*** OUTPUT:
3001E532  4770     		bx lr



**************************************************
	Task Background init code
**************************************************

3001E534  B082     		sub sp, sp, #8
3001E536  F8CD E000		str lr, [sp]
3001E53A  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3001E53E  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E542  F8DD E000		ldr lr, [sp]
3001E546  B002     		add sp, sp, #8

3001E548  4770     		bx lr

**************************************************
	List program: main
**************************************************

PROGRAM main

END_PROGRAM

3001E560  B082     		sub sp, sp, #8
3001E562  F8CD E000		str lr, [sp]
3001E566  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:main}
#1		(*$WAITSWITCH$*)
#2		
#3			(* cnt := cnt + 1; *)
#4			LD		cnt	{LNXT:2|2|-1}
(*) UNDEF
3001E56A  F8DF 701C		ldr r7, [pc, #+28] ; 0x200002A6
3001E56E  F9B7 0000		ldrsh r0, [r7]

#5			ADD		1	{LNXT:2|2|-1}
(-) INT
3001E572  1C40     		add r0, r0, #1

#6			ST		cnt	{LNXT:2|2|-1}
(*) INT
3001E574  F8DF 7010		ldr r7, [pc, #+16] ; 0x200002A6
3001E578  8038     		strh r0, [r7]

3001E57A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E57E  F8DD E000		ldr lr, [sp]
3001E582  B002     		add sp, sp, #8

3001E584  4770     		bx lr

3001E588  200002A6		; 0x200002A6

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
3001E58C  4770     		bx lr


*** OUTPUT:
3001E58E  4770     		bx lr



**************************************************
	Task Fast init code
**************************************************

3001E590  B082     		sub sp, sp, #8
3001E592  F8CD E000		str lr, [sp]
3001E596  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3001E59A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E59E  F8DD E000		ldr lr, [sp]
3001E5A2  B002     		add sp, sp, #8

3001E5A4  4770     		bx lr

**************************************************
	List program: InitParDB
**************************************************

PROGRAM InitParDB

        VAR
warningsKiller : USINT;
dummyCrc32 : UDINT;
	END_VAR

END_PROGRAM

3001E5B0  B082     		sub sp, sp, #8
3001E5B2  F8CD E000		str lr, [sp]
3001E5B6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:InitParDB}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummyCrc32 := 0; *)
#4			MOVE		0,dummyCrc32	{LNXT:3|5|-1}
(*) UDINT
3001E5BA  2000     		mov r0, #0 ; 0
3001E5BC  F8DF 7058		ldr r7, [pc, #+88] ; 0x200002A8
3001E5C0  6038     		str r0, [r7]

#5		
#6			(* warningsKiller := sysDBase_SetExtTable( TO_DWORD( 0 ), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); *)
#7			LDP0		0	{LNXT:5|3|-1}
(-) UDINT
#8			TO_DWORD	{LNXT:5|3|-1}
(-) USINT
3001E5C2  2000     		mov r0, #0 ; 0

#9			sysDBase_SetExtTable		0, 0, 0, 0, 0, 0, 0, 0, 0, 0	{LNXT:5|3|-1}
(*) DWORD
3001E5C4  B088     		sub sp, sp, #32
3001E5C6  2700     		mov r7, #0 ; 0
3001E5C8  4639     		mov r1, r7
3001E5CA  2700     		mov r7, #0 ; 0
3001E5CC  463A     		mov r2, r7
3001E5CE  2700     		mov r7, #0 ; 0
3001E5D0  463B     		mov r3, r7
3001E5D2  2700     		mov r7, #0 ; 0
3001E5D4  F8CD 7000		str r7, [sp]
3001E5D8  2700     		mov r7, #0 ; 0
3001E5DA  F8CD 7004		str r7, [sp, #+4]
3001E5DE  2700     		mov r7, #0 ; 0
3001E5E0  F8CD 7008		str r7, [sp, #+8]
3001E5E4  2700     		mov r7, #0 ; 0
3001E5E6  F8CD 700C		str r7, [sp, #+12]
3001E5EA  2700     		mov r7, #0 ; 0
3001E5EC  F8CD 7010		str r7, [sp, #+16]
3001E5F0  2700     		mov r7, #0 ; 0
3001E5F2  F8CD 7014		str r7, [sp, #+20]
3001E5F6  2700     		mov r7, #0 ; 0
3001E5F8  F8CD 7018		str r7, [sp, #+24]
3001E5FC  F8DF 4010		ldr r4, [pc, #+16] ; 0x807BF0D
3001E600  F044 0401		orr r4, r4, #1
3001E604  47A0     		blx r4
3001E606  B008     		add sp, sp, #32

#10			ST		warningsKiller	{LNXT:5|3|-1}
(*) USINT
3001E608  F8DF 7008		ldr r7, [pc, #+8] ; 0x200002A5
3001E60C  7038     		strb r0, [r7]

3001E60E  E005     		b #10

3001E610  FFFFFFFF		; 0x0807BF0D
3001E614  200002A5		; 0x200002A5
3001E618  200002A8		; 0x200002A8

END_PROGRAM
**************************************************
	List program: $$IOConfig
**************************************************

PROGRAM $$IOConfig

        VAR
warningsKiller : BOOL;
	END_VAR

END_PROGRAM

#0		{SRC:$$IOConfig}
#1		(*$WAITSWITCH$*)
#2		
#3			(* warningsKiller := sysCfgAnalogRes(16); *)
#4			LDP0		16	{LNXT:4|7|-1}
(-) UDINT
#5			sysCfgAnalogRes	{LNXT:4|7|-1}
(*) USINT
3001E61C  2010     		mov r0, #16 ; 16
3001E61E  F8DF 40BC		ldr r4, [pc, #+188] ; 0x8082BA1
3001E622  F044 0401		orr r4, r4, #1
3001E626  47A0     		blx r4

#6			ST		warningsKiller	{LNXT:4|7|-1}
(*) BOOL
3001E628  F8DF 70B8		ldr r7, [pc, #+184] ; 0x200002A4
3001E62C  7038     		strb r0, [r7]

#7		
#8			(* warningsKiller := sysCfgProgInput(0, 0); *)
#9			LDP0		0	{LNXT:7|8|-1}
(-) BOOL
#10			sysCfgProgInput		0	{LNXT:7|8|-1}
(*) USINT
3001E62E  2000     		mov r0, #0 ; 0
3001E630  2100     		mov r1, #0 ; 0
3001E632  F8DF 40AC		ldr r4, [pc, #+172] ; 0x8082BAD
3001E636  F044 0401		orr r4, r4, #1
3001E63A  47A0     		blx r4

#11			ST		warningsKiller	{LNXT:7|8|-1}
(*) BOOL
3001E63C  F8DF 70A4		ldr r7, [pc, #+164] ; 0x200002A4
3001E640  7038     		strb r0, [r7]

#12		
#13			(* warningsKiller := sysCfgProgInput(1, 0); *)
#14			LDP0		1	{LNXT:8|9|-1}
(-) BOOL
#15			sysCfgProgInput		0	{LNXT:8|9|-1}
(*) USINT
3001E642  2001     		mov r0, #1 ; 1
3001E644  2100     		mov r1, #0 ; 0
3001E646  F8DF 4098		ldr r4, [pc, #+152] ; 0x8082BAD
3001E64A  F044 0401		orr r4, r4, #1
3001E64E  47A0     		blx r4

#16			ST		warningsKiller	{LNXT:8|9|-1}
(*) BOOL
3001E650  F8DF 7090		ldr r7, [pc, #+144] ; 0x200002A4
3001E654  7038     		strb r0, [r7]

#17		
#18			(* warningsKiller := sysCfgProgInput(2, 0); *)
#19			LDP0		2	{LNXT:9|10|-1}
(-) BOOL
#20			sysCfgProgInput		0	{LNXT:9|10|-1}
(*) USINT
3001E656  2002     		mov r0, #2 ; 2
3001E658  2100     		mov r1, #0 ; 0
3001E65A  F8DF 4084		ldr r4, [pc, #+132] ; 0x8082BAD
3001E65E  F044 0401		orr r4, r4, #1
3001E662  47A0     		blx r4

#21			ST		warningsKiller	{LNXT:9|10|-1}
(*) BOOL
3001E664  F8DF 707C		ldr r7, [pc, #+124] ; 0x200002A4
3001E668  7038     		strb r0, [r7]

#22		
#23			(* warningsKiller := sysCfgProgInput(3, 0); *)
#24			LDP0		3	{LNXT:10|11|-1}
(-) BOOL
#25			sysCfgProgInput		0	{LNXT:10|11|-1}
(*) USINT
3001E66A  2003     		mov r0, #3 ; 3
3001E66C  2100     		mov r1, #0 ; 0
3001E66E  F8DF 4070		ldr r4, [pc, #+112] ; 0x8082BAD
3001E672  F044 0401		orr r4, r4, #1
3001E676  47A0     		blx r4

#26			ST		warningsKiller	{LNXT:10|11|-1}
(*) BOOL
3001E678  F8DF 7068		ldr r7, [pc, #+104] ; 0x200002A4
3001E67C  7038     		strb r0, [r7]

#27		
#28			(* warningsKiller := sysCfgProgInput(4, 0); *)
#29			LDP0		4	{LNXT:11|12|-1}
(-) BOOL
#30			sysCfgProgInput		0	{LNXT:11|12|-1}
(*) USINT
3001E67E  2004     		mov r0, #4 ; 4
3001E680  2100     		mov r1, #0 ; 0
3001E682  F8DF 405C		ldr r4, [pc, #+92] ; 0x8082BAD
3001E686  F044 0401		orr r4, r4, #1
3001E68A  47A0     		blx r4

#31			ST		warningsKiller	{LNXT:11|12|-1}
(*) BOOL
3001E68C  F8DF 7054		ldr r7, [pc, #+84] ; 0x200002A4
3001E690  7038     		strb r0, [r7]

#32		
#33			(* warningsKiller := sysCfgProgInput(5, 0); *)
#34			LDP0		5	{LNXT:12|13|-1}
(-) BOOL
#35			sysCfgProgInput		0	{LNXT:12|13|-1}
(*) USINT
3001E692  2005     		mov r0, #5 ; 5
3001E694  2100     		mov r1, #0 ; 0
3001E696  F8DF 4048		ldr r4, [pc, #+72] ; 0x8082BAD
3001E69A  F044 0401		orr r4, r4, #1
3001E69E  47A0     		blx r4

#36			ST		warningsKiller	{LNXT:12|13|-1}
(*) BOOL
3001E6A0  F8DF 7040		ldr r7, [pc, #+64] ; 0x200002A4
3001E6A4  7038     		strb r0, [r7]

#37		
#38			(* warningsKiller := sysCfgProgInput(6, 0); *)
#39			LDP0		6	{LNXT:13|14|-1}
(-) BOOL
#40			sysCfgProgInput		0	{LNXT:13|14|-1}
(*) USINT
3001E6A6  2006     		mov r0, #6 ; 6
3001E6A8  2100     		mov r1, #0 ; 0
3001E6AA  F8DF 4034		ldr r4, [pc, #+52] ; 0x8082BAD
3001E6AE  F044 0401		orr r4, r4, #1
3001E6B2  47A0     		blx r4

#41			ST		warningsKiller	{LNXT:13|14|-1}
(*) BOOL
3001E6B4  F8DF 702C		ldr r7, [pc, #+44] ; 0x200002A4
3001E6B8  7038     		strb r0, [r7]

#42		
#43			(* warningsKiller := sysCfgProgInput(7, 0); *)
#44			LDP0		7	{LNXT:14|4|-1}
(-) BOOL
#45			sysCfgProgInput		0	{LNXT:14|4|-1}
(*) USINT
3001E6BA  2007     		mov r0, #7 ; 7
3001E6BC  2100     		mov r1, #0 ; 0
3001E6BE  F8DF 4020		ldr r4, [pc, #+32] ; 0x8082BAD
3001E6C2  F044 0401		orr r4, r4, #1
3001E6C6  47A0     		blx r4

#46			ST		warningsKiller	{LNXT:14|4|-1}
(*) BOOL
3001E6C8  F8DF 7018		ldr r7, [pc, #+24] ; 0x200002A4
3001E6CC  7038     		strb r0, [r7]

3001E6CE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E6D2  F8DD E000		ldr lr, [sp]
3001E6D6  B002     		add sp, sp, #8

3001E6D8  4770     		bx lr

3001E6DC  FFFFFFFF		; 0x08082BA1
3001E6E0  FFFFFFFF		; 0x08082BAD
3001E6E4  200002A4		; 0x200002A4

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
3001E6E8  4770     		bx lr


*** OUTPUT:
3001E6EA  4770     		bx lr



**************************************************
	Task Init init code
**************************************************

3001E6EC  B082     		sub sp, sp, #8
3001E6EE  F8CD E000		str lr, [sp]
3001E6F2  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3001E6F6  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E6FA  F8DD E000		ldr lr, [sp]
3001E6FE  B002     		add sp, sp, #8

3001E700  4770     		bx lr



**************************************************
	Global init code
**************************************************

3001E710  B082     		sub sp, sp, #8
3001E712  F8CD E000		str lr, [sp]
3001E716  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3001E71A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E71E  F8DD E000		ldr lr, [sp]
3001E722  B002     		add sp, sp, #8

3001E724  4770     		bx lr



**************************************************
	Global RETAIN init code
**************************************************

3001E726  B082     		sub sp, sp, #8
3001E728  F8CD E000		str lr, [sp]
3001E72C  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3001E730  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E734  F8DD E000		ldr lr, [sp]
3001E738  B002     		add sp, sp, #8

3001E73A  4770     		bx lr



**************************************************
	Task $$VirtualTables init code
**************************************************

3001E73C  B082     		sub sp, sp, #8
3001E73E  F8CD E000		str lr, [sp]
3001E742  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3001E746  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3001E74A  F8DD E000		ldr lr, [sp]
3001E74E  B002     		add sp, sp, #8

3001E750  4770     		bx lr



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		000000003001E400h
End code area:            		000000003001E84Ch
Code size:                		0000044Ch

Start local data area:    		0000000020000298h
End local data area:      		00000000200002ACh
Local data size:          		00000014h

Start retentive data area:		0000000038000800h
End retentive data area:  		0000000038000800h
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                7F974ABF
DEBUG MEMO ID:                          3001E6EE
FULL MEMO ID:                           000010E6
********************************************
