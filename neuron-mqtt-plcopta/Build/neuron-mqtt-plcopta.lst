***********************************************************************
*
*	CODE GENERATION LISTING FOR: neuron-mqtt-plcopta
*	COMPILER VERSION: 5.22.0.39
*
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
300000D0  FB90 F3F1		sdiv r3, r0, r1
300000D4  4359     		mul r1, r1, r3
300000D6  EBC1 0000		rsb r0, r1, r0
300000DA  4770     		bx lr

$$MOD_U:
300000DC  FBB0 F3F1		udiv r3, r0, r1
300000E0  4359     		mul r1, r1, r3
300000E2  EBC1 0000		rsb r0, r1, r0
300000E6  4770     		bx lr

**************************************************
	List program: optaMqttNeuron
**************************************************

PROGRAM optaMqttNeuron

        VAR
data_real : REAL;
	END_VAR

END_PROGRAM

300000F0  B082     		sub sp, sp, #8
300000F2  F8CD E000		str lr, [sp]
300000F6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0			{SRC:optaMqttNeuron}
#1		 
#2		  
#3			(* Network 1 *)
#4			LD		MQTTCONNECTION {R:1$2}
(*) UNDEF
300000FA  F8DF 7030		ldr r7, [pc, #+48] ; 0x38000001
300000FE  7838     		ldrb r0, [r7]

#5			ST		LEDBLUE {R:1$4}
(*) BOOL
30000100  F8DF 7020		ldr r7, [pc, #+32] ; 0x2401F4A6
30000104  7038     		strb r0, [r7]

#6		 
#7			(* Network 2 *)
#8			LD		WIFICONNECTION {R:2$4}
(*) UNDEF
30000106  F8DF 7020		ldr r7, [pc, #+32] ; 0x38000000
3000010A  7838     		ldrb r0, [r7]

#9			ST		LEDGREEN {R:2$6}
(*) BOOL
3000010C  F8DF 7010		ldr r7, [pc, #+16] ; 0x2401F4A5
30000110  7038     		strb r0, [r7]

#10		 
#11			(* Network 3 *)
#12			LD		TRUE
(-) UNDEF
30000112  2001     		mov r0, #1 ; 1

30000114  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000118  F8DD E000		ldr lr, [sp]
3000011C  B002     		add sp, sp, #8

3000011E  4770     		bx lr

30000120  FFFFFFFF		; 0x2401F4A5
30000124  FFFFFFFF		; 0x2401F4A6
30000128  FFFFFFFF		; 0x38000000
3000012C  FFFFFFFF		; 0x38000001

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
30000130  4770     		bx lr


*** OUTPUT:
30000132  4770     		bx lr



**************************************************
	Task Background init code
**************************************************

30000134  B082     		sub sp, sp, #8
30000136  F8CD E000		str lr, [sp]
3000013A  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3000013E  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000142  F8DD E000		ldr lr, [sp]
30000146  B002     		add sp, sp, #8

30000148  4770     		bx lr

**************************************************
	List program: main
**************************************************

PROGRAM main

END_PROGRAM

30000160  B082     		sub sp, sp, #8
30000162  F8CD E000		str lr, [sp]
30000166  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:main}
#1		(*$WAITSWITCH$*)
#2		
#3			(* cnt := cnt + 1; *)
#4			LD		cnt	{LNXT:2|2|-1}
(*) UNDEF
3000016A  F8DF 701C		ldr r7, [pc, #+28] ; 0x200002A6
3000016E  F9B7 0000		ldrsh r0, [r7]

#5			ADD		1	{LNXT:2|2|-1}
(-) INT
30000172  1C40     		add r0, r0, #1

#6			ST		cnt	{LNXT:2|2|-1}
(*) INT
30000174  F8DF 7010		ldr r7, [pc, #+16] ; 0x200002A6
30000178  8038     		strh r0, [r7]

3000017A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000017E  F8DD E000		ldr lr, [sp]
30000182  B002     		add sp, sp, #8

30000184  4770     		bx lr

30000188  200002A6		; 0x200002A6

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
3000018C  4770     		bx lr


*** OUTPUT:
3000018E  4770     		bx lr



**************************************************
	Task Fast init code
**************************************************

30000190  B082     		sub sp, sp, #8
30000192  F8CD E000		str lr, [sp]
30000196  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3000019A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000019E  F8DD E000		ldr lr, [sp]
300001A2  B002     		add sp, sp, #8

300001A4  4770     		bx lr

**************************************************
	List program: InitParDB
**************************************************

PROGRAM InitParDB

        VAR
warningsKiller : USINT;
dummyCrc32 : UDINT;
	END_VAR

END_PROGRAM

300001B0  B082     		sub sp, sp, #8
300001B2  F8CD E000		str lr, [sp]
300001B6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:InitParDB}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummyCrc32 := 0; *)
#4			MOVE		0,dummyCrc32	{LNXT:3|5|-1}
(*) UDINT
300001BA  2000     		mov r0, #0 ; 0
300001BC  F8DF 7058		ldr r7, [pc, #+88] ; 0x200002A8
300001C0  6038     		str r0, [r7]

#5		
#6			(* warningsKiller := sysDBase_SetExtTable( TO_DWORD( 0 ), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); *)
#7			LDP0		0	{LNXT:5|3|-1}
(-) UDINT
#8			TO_DWORD	{LNXT:5|3|-1}
(-) USINT
300001C2  2000     		mov r0, #0 ; 0

#9			sysDBase_SetExtTable		0, 0, 0, 0, 0, 0, 0, 0, 0, 0	{LNXT:5|3|-1}
(*) DWORD
300001C4  B088     		sub sp, sp, #32
300001C6  2700     		mov r7, #0 ; 0
300001C8  4639     		mov r1, r7
300001CA  2700     		mov r7, #0 ; 0
300001CC  463A     		mov r2, r7
300001CE  2700     		mov r7, #0 ; 0
300001D0  463B     		mov r3, r7
300001D2  2700     		mov r7, #0 ; 0
300001D4  F8CD 7000		str r7, [sp]
300001D8  2700     		mov r7, #0 ; 0
300001DA  F8CD 7004		str r7, [sp, #+4]
300001DE  2700     		mov r7, #0 ; 0
300001E0  F8CD 7008		str r7, [sp, #+8]
300001E4  2700     		mov r7, #0 ; 0
300001E6  F8CD 700C		str r7, [sp, #+12]
300001EA  2700     		mov r7, #0 ; 0
300001EC  F8CD 7010		str r7, [sp, #+16]
300001F0  2700     		mov r7, #0 ; 0
300001F2  F8CD 7014		str r7, [sp, #+20]
300001F6  2700     		mov r7, #0 ; 0
300001F8  F8CD 7018		str r7, [sp, #+24]
300001FC  F8DF 4010		ldr r4, [pc, #+16] ; 0x807CD21
30000200  F044 0401		orr r4, r4, #1
30000204  47A0     		blx r4
30000206  B008     		add sp, sp, #32

#10			ST		warningsKiller	{LNXT:5|3|-1}
(*) USINT
30000208  F8DF 7008		ldr r7, [pc, #+8] ; 0x200002A5
3000020C  7038     		strb r0, [r7]

3000020E  E005     		b #10

30000210  FFFFFFFF		; 0x0807CD21
30000214  200002A5		; 0x200002A5
30000218  200002A8		; 0x200002A8

END_PROGRAM
**************************************************
	List program: $$IOConfig
**************************************************

PROGRAM $$IOConfig

        VAR
warningsKiller : BOOL;
	END_VAR

END_PROGRAM

#0		{SRC:$$IOConfig}
#1		(*$WAITSWITCH$*)
#2		
#3			(* warningsKiller := sysCfgAnalogRes(16); *)
#4			LDP0		16	{LNXT:4|7|-1}
(-) UDINT
#5			sysCfgAnalogRes	{LNXT:4|7|-1}
(*) USINT
3000021C  2010     		mov r0, #16 ; 16
3000021E  F8DF 40BC		ldr r4, [pc, #+188] ; 0x80839B1
30000222  F044 0401		orr r4, r4, #1
30000226  47A0     		blx r4

#6			ST		warningsKiller	{LNXT:4|7|-1}
(*) BOOL
30000228  F8DF 70B8		ldr r7, [pc, #+184] ; 0x200002A4
3000022C  7038     		strb r0, [r7]

#7		
#8			(* warningsKiller := sysCfgProgInput(0, 0); *)
#9			LDP0		0	{LNXT:7|8|-1}
(-) BOOL
#10			sysCfgProgInput		0	{LNXT:7|8|-1}
(*) USINT
3000022E  2000     		mov r0, #0 ; 0
30000230  2100     		mov r1, #0 ; 0
30000232  F8DF 40AC		ldr r4, [pc, #+172] ; 0x80839BD
30000236  F044 0401		orr r4, r4, #1
3000023A  47A0     		blx r4

#11			ST		warningsKiller	{LNXT:7|8|-1}
(*) BOOL
3000023C  F8DF 70A4		ldr r7, [pc, #+164] ; 0x200002A4
30000240  7038     		strb r0, [r7]

#12		
#13			(* warningsKiller := sysCfgProgInput(1, 0); *)
#14			LDP0		1	{LNXT:8|9|-1}
(-) BOOL
#15			sysCfgProgInput		0	{LNXT:8|9|-1}
(*) USINT
30000242  2001     		mov r0, #1 ; 1
30000244  2100     		mov r1, #0 ; 0
30000246  F8DF 4098		ldr r4, [pc, #+152] ; 0x80839BD
3000024A  F044 0401		orr r4, r4, #1
3000024E  47A0     		blx r4

#16			ST		warningsKiller	{LNXT:8|9|-1}
(*) BOOL
30000250  F8DF 7090		ldr r7, [pc, #+144] ; 0x200002A4
30000254  7038     		strb r0, [r7]

#17		
#18			(* warningsKiller := sysCfgProgInput(2, 0); *)
#19			LDP0		2	{LNXT:9|10|-1}
(-) BOOL
#20			sysCfgProgInput		0	{LNXT:9|10|-1}
(*) USINT
30000256  2002     		mov r0, #2 ; 2
30000258  2100     		mov r1, #0 ; 0
3000025A  F8DF 4084		ldr r4, [pc, #+132] ; 0x80839BD
3000025E  F044 0401		orr r4, r4, #1
30000262  47A0     		blx r4

#21			ST		warningsKiller	{LNXT:9|10|-1}
(*) BOOL
30000264  F8DF 707C		ldr r7, [pc, #+124] ; 0x200002A4
30000268  7038     		strb r0, [r7]

#22		
#23			(* warningsKiller := sysCfgProgInput(3, 0); *)
#24			LDP0		3	{LNXT:10|11|-1}
(-) BOOL
#25			sysCfgProgInput		0	{LNXT:10|11|-1}
(*) USINT
3000026A  2003     		mov r0, #3 ; 3
3000026C  2100     		mov r1, #0 ; 0
3000026E  F8DF 4070		ldr r4, [pc, #+112] ; 0x80839BD
30000272  F044 0401		orr r4, r4, #1
30000276  47A0     		blx r4

#26			ST		warningsKiller	{LNXT:10|11|-1}
(*) BOOL
30000278  F8DF 7068		ldr r7, [pc, #+104] ; 0x200002A4
3000027C  7038     		strb r0, [r7]

#27		
#28			(* warningsKiller := sysCfgProgInput(4, 0); *)
#29			LDP0		4	{LNXT:11|12|-1}
(-) BOOL
#30			sysCfgProgInput		0	{LNXT:11|12|-1}
(*) USINT
3000027E  2004     		mov r0, #4 ; 4
30000280  2100     		mov r1, #0 ; 0
30000282  F8DF 405C		ldr r4, [pc, #+92] ; 0x80839BD
30000286  F044 0401		orr r4, r4, #1
3000028A  47A0     		blx r4

#31			ST		warningsKiller	{LNXT:11|12|-1}
(*) BOOL
3000028C  F8DF 7054		ldr r7, [pc, #+84] ; 0x200002A4
30000290  7038     		strb r0, [r7]

#32		
#33			(* warningsKiller := sysCfgProgInput(5, 0); *)
#34			LDP0		5	{LNXT:12|13|-1}
(-) BOOL
#35			sysCfgProgInput		0	{LNXT:12|13|-1}
(*) USINT
30000292  2005     		mov r0, #5 ; 5
30000294  2100     		mov r1, #0 ; 0
30000296  F8DF 4048		ldr r4, [pc, #+72] ; 0x80839BD
3000029A  F044 0401		orr r4, r4, #1
3000029E  47A0     		blx r4

#36			ST		warningsKiller	{LNXT:12|13|-1}
(*) BOOL
300002A0  F8DF 7040		ldr r7, [pc, #+64] ; 0x200002A4
300002A4  7038     		strb r0, [r7]

#37		
#38			(* warningsKiller := sysCfgProgInput(6, 0); *)
#39			LDP0		6	{LNXT:13|14|-1}
(-) BOOL
#40			sysCfgProgInput		0	{LNXT:13|14|-1}
(*) USINT
300002A6  2006     		mov r0, #6 ; 6
300002A8  2100     		mov r1, #0 ; 0
300002AA  F8DF 4034		ldr r4, [pc, #+52] ; 0x80839BD
300002AE  F044 0401		orr r4, r4, #1
300002B2  47A0     		blx r4

#41			ST		warningsKiller	{LNXT:13|14|-1}
(*) BOOL
300002B4  F8DF 702C		ldr r7, [pc, #+44] ; 0x200002A4
300002B8  7038     		strb r0, [r7]

#42		
#43			(* warningsKiller := sysCfgProgInput(7, 0); *)
#44			LDP0		7	{LNXT:14|4|-1}
(-) BOOL
#45			sysCfgProgInput		0	{LNXT:14|4|-1}
(*) USINT
300002BA  2007     		mov r0, #7 ; 7
300002BC  2100     		mov r1, #0 ; 0
300002BE  F8DF 4020		ldr r4, [pc, #+32] ; 0x80839BD
300002C2  F044 0401		orr r4, r4, #1
300002C6  47A0     		blx r4

#46			ST		warningsKiller	{LNXT:14|4|-1}
(*) BOOL
300002C8  F8DF 7018		ldr r7, [pc, #+24] ; 0x200002A4
300002CC  7038     		strb r0, [r7]

300002CE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300002D2  F8DD E000		ldr lr, [sp]
300002D6  B002     		add sp, sp, #8

300002D8  4770     		bx lr

300002DC  FFFFFFFF		; 0x080839B1
300002E0  FFFFFFFF		; 0x080839BD
300002E4  200002A4		; 0x200002A4

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
300002E8  4770     		bx lr


*** OUTPUT:
300002EA  4770     		bx lr



**************************************************
	Task Init init code
**************************************************

300002EC  B082     		sub sp, sp, #8
300002EE  F8CD E000		str lr, [sp]
300002F2  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

300002F6  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300002FA  F8DD E000		ldr lr, [sp]
300002FE  B002     		add sp, sp, #8

30000300  4770     		bx lr



**************************************************
	Global init code
**************************************************

30000310  B082     		sub sp, sp, #8
30000312  F8CD E000		str lr, [sp]
30000316  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3000031A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000031E  F8DD E000		ldr lr, [sp]
30000322  B002     		add sp, sp, #8

30000324  4770     		bx lr



**************************************************
	Global RETAIN init code
**************************************************

30000326  B082     		sub sp, sp, #8
30000328  F8CD E000		str lr, [sp]
3000032C  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000330  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000334  F8DD E000		ldr lr, [sp]
30000338  B002     		add sp, sp, #8

3000033A  4770     		bx lr



**************************************************
	Task $$VirtualTables init code
**************************************************

3000033C  B082     		sub sp, sp, #8
3000033E  F8CD E000		str lr, [sp]
30000342  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000346  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000034A  F8DD E000		ldr lr, [sp]
3000034E  B002     		add sp, sp, #8

30000350  4770     		bx lr



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		0000000030000000h
End code area:            		000000003000044Ch
Code size:                		0000044Ch

Start local data area:    		0000000020000298h
End local data area:      		00000000200002ACh
Local data size:          		00000014h

Start retentive data area:		0000000038000800h
End retentive data area:  		0000000038000800h
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                379294C9
DEBUG MEMO ID:                          300002EE
FULL MEMO ID:                           0000FC30
********************************************
